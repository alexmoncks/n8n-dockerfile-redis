services:
  postgres:
    image: postgres:11
    restart: on-failure
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_NON_ROOT_USER: ${POSTGRES_NON_ROOT_USER}
      POSTGRES_NON_ROOT_PASSWORD: ${POSTGRES_NON_ROOT_PASSWORD}
    volumes:
      - db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh

  redis:
    image: redis:6-alpine
    restart: on-failure
    volumes:
      - redis_storage:/data

  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    restart: on-failure
    environment:
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
      DB_POSTGRESDB_USER: ${POSTGRES_NON_ROOT_USER}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_NON_ROOT_PASSWORD}
      N8N_HOST: ${SUBDOMAIN}.${DOMAIN_NAME}
      N8N_PORT: 5678
      N8N_PROTOCOL: https
      NODE_ENV: production
      WEBHOOK_URL: https://${SUBDOMAIN}.${DOMAIN_NAME}
      GENERIC_TIMEZONE: ${GENERIC_TIMEZONE}
    volumes:
      - n8n_storage:/home/node/.n8n
      - /home/paco_usr/n8n-localfiles:/files
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "5678:5678"
    depends_on:
      - postgres
      - redis

volumes:
  db_storage:
  n8n_storage:
  redis_storage:

